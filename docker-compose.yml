services:

  frontend:
    image: david712/frontend:latest
    container_name: frontend
    env_file:
      - frontend/.env.staging
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - filebrowser
    deploy:
      placement:
        constraints:
          - node.role == manager

  postgres:
    image: david712/postgres:latest
    container_name: postgres
    build:
      context: ./database
      dockerfile: Dockerfile
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    deploy:
      placement:
        constraints:
          - node.role == manager
      endpoint_mode: vip
    ports:
      - "5432:5432"
    volumes:
      - ./database/data:/var/lib/postgresql/data

  prefect:
    image: david712/prefect:latest
    container_name: prefect
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4200/api/health" ]
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 15s
    build:
      context: ./pipeline
      dockerfile: Dockerfile
    entrypoint: [ '/app/pipeline/wrapper_script.sh' ]
    env_file:
      - pipeline/.env.compose
    ports:
      - "4201:4200"
    volumes:
      # - /mnt/beegfs/prefect_data:/mnt/beegfs/prefect_data
      - ./pipeline:/app/pipeline
    depends_on:
      - postgres
    deploy:
      endpoint_mode: vip
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  agent:
    image: david712/prefect:latest
    env_file:
      - pipeline/.env.compose
    entrypoint: [ 'python3', '/app/pipeline/pipeline.py' ]
    deploy:
      endpoint_mode: vip
      replicas: 1
      resources:
        limits:
          memory: 3gb
    volumes:
      - /mnt/beegfs/prefect_data:/mnt/beegfs/prefect_data
      - ./pipeline:/app/pipeline
      - ./sample_data:/app/sample_data

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    restart: always
    volumes:
      - /mnt/beegfs/prefect_data:/srv
      - ./filebrowser/filebrowser.json:/.filebrowser.json
      # - ./filebrowser/filebrowser.json:/etc/config.json
      # - ./filebrowser/filebrowser.db:/database.db
    deploy:
      placement:
        constraints:
          - node.role == manager

  backend:
    image: david712/backend:latest
    container_name: backend
    depends_on:
      - postgres
    volumes:
      - /mnt/beegfs/prefect_data:/mnt/beegfs/prefect_data
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env.compose
    deploy:
      endpoint_mode: vip
      replicas: 1
      placement:
        constraints:
          - node.role == manager

