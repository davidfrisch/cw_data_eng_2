
  - name: Update packages
    ansible.builtin.dnf:
      name: "*"
      state: latest

  - name: Ping to {{ client_ip_address }} client
    shell: ping -c 1 {{ client_ip_address }}
  
  - name: NFS tools
    ansible.builtin.dnf:
      name: "nfs-utils"
      state: latest

  - name: Check that /mnt/data/shared exists
    ansible.builtin.stat:
      path: /mnt/data/shared
    register: shared_dir

  - name: Create the NFS share
    ansible.builtin.file:
      path: /mnt/data/shared
      state: directory
      group: ec2-user
      owner: ec2-user
    when: not shared_dir.stat.exists

  - name: Delete the existing line in /etc/exports
    ansible.builtin.lineinfile:
      path: /etc/exports
      state: absent
      regexp: "^/mnt/data/shared.*$"

  - name: Write in /etc/exports in client
    ansible.builtin.lineinfile:
      path: /etc/exports
      line: "/mnt/data/shared {{ item }}(rw,sync,no_root_squash)"
    with_items: "{{ groups['client'] }}" 

  - name: Write in /etc/exports in clusters
    ansible.builtin.lineinfile:
      path: /etc/exports
      line: "/mnt/data/shared {{ item }}(rw,sync,no_root_squash)"
    with_items: "{{ groups['clusters'] }}"

  - name: Export the NFS share
    ansible.builtin.shell: exportfs -a

  - name: Enable the NFS server
    ansible.builtin.systemd:
      name: nfs-server
      enabled: yes
      state: started

  - name: NFS mountpoint
    ansible.builtin.file:
      path: /mnt/data/shared
      state: directory
      group: ec2-user
      owner: ec2-user

  - name: NFS fstab
    ansible.posix.mount:
      boot: true
      state: mounted
      fstype: nfs
      src: "{{ client_ip_address }}:/mnt/data/shared"
      path: /mnt/data/shared
      opts: defaults,_netdev
    